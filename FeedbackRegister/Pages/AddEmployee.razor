@page "/AddEmployee"

@using static FeedbackRegister.Data.DataGridService
@using static FeedbackRegister.Pages.Counter
@inject Counter counter;
@using static FeedbackRegister.Data.ConnectClass;
@inject FeedbackRegister.Data.GetDataClass getDataClass

<h2>@person</h2>
<div class="nav-item pt-1 pb-3">
            <NavLink class="" href="Counter">
                    <button class='btn btn-success' onclick=@addEmployee>Сохранить</button>
            </NavLink>
            <NavLink class="" href="Counter">
                    <button class='btn btn-secondary'>Отмена</button>
            </NavLink>
</div>
    <p>
  <label>Имя: </label>
    <input type="text" name="namebox" @bind=@nameEmployee/>
    </p>
    <p>
    <label>Email: </label>
    <input type="text" name="emailbox" @bind=@emailEmployee/>
    </p>
    <p>
    <p>
    <label>Телефон: </label>
    <input type="text" name="telefonbox" @bind=@telefonEmployee/>
    </p>
    @if (roleList.Count > 0)
    {
        <label>Должность: </label>
        <select name="professionbox" @bind=@roleidEmployee>
            <option value="" selected disabled>Выберите специальность</option>
            @foreach (var c in roleList)
            {
                <option>@c.roleName</option>
            }
        </select>
    }
    </p>
    <p>
    <label>Деактивирована: </label>
    <input type="checkbox" name="deactbox" @bind=@deactivationEmployee/>
    </p>
    <span>@message</span>
@code {
    //string? email { get; set; }
    //string? role { get; set; }
    //string? telefon { get; set; }
    //string? selectedEmployees;
    string person = "Новая запись";
    List<Role> roleList = new List<Role>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        //roleList = getDataClass.getRoleList();
    }
    public void addEmployee()
    {
        using (var db = new ConnectContext())
        {
            var role = db.roles.Where(x => x.roleName == roleidEmployee).ToList();
            var rol = role[0];
            Employee employee = new Employee
                {
                    id = Guid.NewGuid(),
                    name = nameEmployee,
                    email = emailEmployee,
                    telefon = telefonEmployee,
                    deactivation = deactivationEmployee,
                    role = role[0]
                };
            if (employee != null)
            {
                db.employees.Add(employee);
                db.SaveChanges();
            }
        }
    }
    public string message{ get; set; }
    [Parameter]
    public string idEmployee { get; set; }
    [Parameter]
    public string? nameEmployee { get; set; }
    [Parameter]
    public string? emailEmployee { get; set; } = "";
    [Parameter]
    public string? telefonEmployee { get; set; } = "";
    [Parameter]
    public bool? deactivationEmployee { get; set; } = false;
    [Parameter]
    public string? roleidEmployee { get; set; } = "";
}
